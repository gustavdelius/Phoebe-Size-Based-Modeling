% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/project_methods_NPAC.R
\docType{methods}
\name{getFMortGear}
\alias{getFMortGear}
\alias{getFMortGear,MizerParams_NPAC,matrix-method}
\alias{getFMortGear,MizerParams_NPAC,numeric-method}
\alias{getFMortGear,MizerSim_NPAC,missing-method}
\title{Get the fishing mortality by time, gear, species and size}
\usage{
getFMortGear(object, effort, ...)

\S4method{getFMortGear}{MizerParams_NPAC,numeric}(object, effort, ...)

\S4method{getFMortGear}{MizerParams_NPAC,matrix}(object, effort, ...)

\S4method{getFMortGear}{MizerSim_NPAC,missing}(object, effort,
  time_range = dimnames(object@effort)$time, ...)
}
\arguments{
\item{object}{A \code{MizerParams_NPAC} object or a \code{MizerSim_NPAC} object.}

\item{effort}{The effort of each fishing gear. Only needed if the object
argument is of class \code{MizerParams_NPAC}. See notes below.}

\item{...}{Other arguments (currently unused).}

\item{time_range}{Subset the returned fishing mortalities by time. The time
range is either a vector of values, a vector of min and max time, or a
single value. Default is the whole time range. Only used if the
\code{object} argument is of type \code{MizerSim_NPAC}.}
}
\value{
An array. If the effort argument has a time dimension, or a
  \code{MizerSim_NPAC} is passed in, the output array has four dimensions (time x
  gear x species x size). If the effort argument does not have a time
  dimension (i.e. it is a vector or a single numeric), the output array has
  three dimensions (gear x species x size).
}
\description{
Calculates the fishing mortality by gear, species and size at each time step
in the \code{effort} argument. Used by the \code{project_NPAC} method to perform
simulations.

\code{getFMortGear} method for \code{MizerParams_NPAC} object with constant effort.

\code{getFMortGear} method for \code{MizerParams_NPAC} object with time changing effort.

\code{getFMortGear} method for \code{MizerSim_NPAC} object.
}
\note{
Here: fishing mortality = catchability x selectivity x effort.

The \code{effort} argument is only used if a \code{MizerParams_NPAC} object is
passed in. The \code{effort} argument can be a two dimensional array (time x
gear), a vector of length equal to the number of gears (each gear has a
different effort that is constant in time), or a single numeric value (each
gear has the same effort that is constant in time). The order of gears in the
\code{effort} argument must be the same the same as in the \code{MizerParams_NPAC}
object.

If the object argument is of class \code{MizerSim_NPAC} then the effort slot of
the \code{MizerSim_NPAC} object is used and the \code{effort} argument is not
used.
}
\examples{
\dontrun{
data(NS_species_params_gears_NPAC)
data(inter)
params <- MizerParams_NPAC(NS_species_params_gears_NPAC, inter)
# Get the fishing mortality when effort is constant
# for all gears and time:
getFMortGear(params, effort = 1)
# Get the fishing mortality when effort is different
# between the four gears but constant in time:
getFMortGear(params, effort = c(0.5,1,1.5,0.75))
# Get the fishing mortality when effort is different
# between the four gears and changes with time:
effort <- array(NA, dim = c(20,4))
effort[,1] <- seq(from=0, to = 1, length=20)
effort[,2] <- seq(from=1, to = 0.5, length=20)
effort[,3] <- seq(from=1, to = 2, length=20)
effort[,4] <- seq(from=2, to = 1, length=20)
getFMortGear(params, effort=effort)
# Get the fishing mortality using the effort already held in a MizerSim_NPAC object.
sim <- project_NPAC(params, t_max = 20, effort = 0.5)
getFMortGear(sim)
getFMortGear(sim, time_range=c(10,20))
}
}

